name: Update immich-cli

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      latest_version: ${{ steps.get_version.outputs.latest_version }}
      build_needed: ${{ steps.check_image.outputs.build_needed }}
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get latest immich-cli version
        id: get_version
        run: |
          LATEST_VERSION=$(curl -s "https://registry.npmjs.org/@immich/cli/latest" | jq -r '.version')
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if image exists
        id: check_image
        run: |
          if docker manifest inspect ghcr.io/${{ github.repository_owner }}/docker-immich-cli-curl:${{ steps.get_version.outputs.latest_version }} > /dev/null; then
            echo "Image for version ${{ steps.get_version.outputs.latest_version }} already exists."
            echo "build_needed=false" >> $GITHUB_OUTPUT
          else
            echo "Image for version ${{ steps.get_version.outputs.latest_version }} does not exist. Proceeding with build."
            echo "build_needed=true" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

  build:
    needs: check
    if: needs.check.outputs.build_needed == 'true'
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runner: ubicloud-standard-2-arm
            arch: arm64
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push arch-specific image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/docker-immich-cli-curl:${{ needs.check.outputs.latest_version }}-${{ matrix.arch }}
          build-args: |
            IMICH_CLI_VERSION=${{ needs.check.outputs.latest_version }}
          cache-from: type=gha,scope=${{ github.workflow }}-${{ matrix.arch }}
          cache-to: type=gha,scope=${{ github.workflow }}-${{ matrix.arch }},mode=max
          provenance: false

  push-multi-arch-image:
    runs-on: ubuntu-latest
    needs: [check, build]
    if: needs.check.outputs.build_needed == 'true'
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository_owner }}/docker-immich-cli-curl:${{ needs.check.outputs.latest_version }} \
            ghcr.io/${{ github.repository_owner }}/docker-immich-cli-curl:${{ needs.check.outputs.latest_version }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/docker-immich-cli-curl:${{ needs.check.outputs.latest_version }}-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/docker-immich-cli-curl:${{ needs.check.outputs.latest_version }}

          docker manifest create ghcr.io/${{ github.repository_owner }}/docker-immich-cli-curl:latest \
            ghcr.io/${{ github.repository_owner }}/docker-immich-cli-curl:${{ needs.check.outputs.latest_version }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/docker-immich-cli-curl:${{ needs.check.outputs.latest_version }}-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/docker-immich-cli-curl:latest
